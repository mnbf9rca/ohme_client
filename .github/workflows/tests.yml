name: Run pytest

on:
  push:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b # v1
        with:
          version: 1.6.1 # pin the version as they keep changing their APIs
          virtualenvs-create: false
          virtualenvs-in-project: false

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          poetry install --with test --without dev  --no-interaction --no-root --sync
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
          python  -c "import os; print(os.environ['VIRTUAL_ENV'])"

      - name: Lint with flake8
        run: |
          . venv/bin/activate
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        env:
          DOTENV_KEY: ${{ secrets.DOTENV_KEY }}
        run: |
          . venv/bin/activate
          pytest --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
